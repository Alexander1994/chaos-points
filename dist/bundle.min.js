(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Canvas=function(){function Canvas(){}Canvas.clear=function(){Canvas.ctx.clearRect(0,0,Canvas.el.width,Canvas.el.height)};Canvas.canvasYToLogicalY=function(y){return Canvas.el.height-y};Canvas.logicalYToCanvasY=function(y){return Canvas.el.height-y};Canvas.validX=function(x){return x>=0&&x<=Canvas.el.width};Canvas.validCanvasY=function(y){return y>=0&&y<=Canvas.el.height};Canvas.el=document.getElementById("canvasEl");Canvas.ctx=Canvas.el.getContext("2d");return Canvas}();exports.Canvas=Canvas},{}],2:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Canvas_1=require("./Canvas");var Point=function(){function Point(x,y,w,color){if(w===void 0){w=.5}if(color===void 0){color="#333"}this.x=Canvas_1.Canvas.validX(x)?x:0;this.y=Canvas_1.Canvas.validCanvasY(y)?y:0;this.color=color;if(!this.setWeight(w))this.weight=.5}Point.prototype.draw=function(color){Canvas_1.Canvas.ctx.strokeStyle=color;Canvas_1.Canvas.ctx.strokeRect(this.x,this.y,1,1)};Point.prototype.equals=function(p){return this.x===p.x&&this.y===p.y};Point.prototype.getEl=function(color,cbReDraw){var pointContainer=document.createElement("div");var xText=document.createTextNode("x:");var yText=document.createTextNode("y:");var wText=document.createTextNode("Set Weight");var xInput=document.createElement("input");var yInput=document.createElement("input");var wInput=document.createElement("input");var wSet=document.createElement("button");yInput.value=String(Canvas_1.Canvas.canvasYToLogicalY(this.y));yInput.className="y";var point=this;yInput.addEventListener("input",function(e){var y=Number(e.target.value);if(Canvas_1.Canvas.validCanvasY(y)){point.y=Canvas_1.Canvas.logicalYToCanvasY(y);cbReDraw()}else{alert("Invalid Y");yInput.value=String(Canvas_1.Canvas.canvasYToLogicalY(point.y))}});xInput.value=String(this.x);xInput.className="x";xInput.addEventListener("input",function(e){var x=Number(e.target.value);if(Canvas_1.Canvas.validX(x)){point.x=x;cbReDraw()}else{alert("Invalid X");xInput.value=String(point.x)}});wInput.value=String(this.weight);wInput.className="w";wSet.appendChild(wText);wSet.addEventListener("click",function(e){if(!point.setWeight(Number(wInput.value))){alert("Weight not set, weight must be greater than 0 and less than or equal to 1");wInput.value=String(point.weight)}});pointContainer.appendChild(xText);pointContainer.appendChild(xInput);pointContainer.appendChild(yText);pointContainer.appendChild(yInput);pointContainer.appendChild(wSet);pointContainer.appendChild(wInput);return pointContainer};Point.prototype.setWeight=function(w){if(Point.isValidWeight(w)){this.weight=w;return true}return false};Point.pointBetweenPoints=function(p1,p2){var xOut=p2.x+(p1.x-p2.x)*(p1.weight+p2.weight)/2;var yOut=p2.y+(p1.y-p2.y)*(p1.weight+p2.weight)/2;return new Point(xOut,yOut)};Point.isValidWeight=function(w){return w<=1&&w>0};return Point}();exports.Point=Point},{"./Canvas":1}],3:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Point_1=require("./Point");var PointList=function(){function PointList(color){this.pList=[];this.color=color}PointList.prototype.addPoint=function(p){this.pList.push(p);p.draw(this.color)};PointList.prototype.clearPointList=function(){this.pList=[]};PointList.prototype.setAllPointsWeight=function(weight){if(Point_1.Point.isValidWeight(weight)){this.pList.forEach(function(p,i,a){p.setWeight(weight)});return true}return false};PointList.prototype.getRandomPoint=function(){return this.pList[Math.floor(Math.random()*this.pList.length)]};PointList.prototype.reDraw=function(){var _this=this;this.pList.forEach(function(p,i,a){p.draw(_this.color)})};return PointList}();exports.PointList=PointList},{"./Point":2}],4:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Point_1=require("./Point");var PointList_1=require("./PointList");var Canvas_1=require("./Canvas");var genPointsBtn=document.getElementById("genPointsBtn");var genPointsCount=document.getElementById("genPointsCount");var clearGenPoints=document.getElementById("clearGenPoints");var clearUserPoints=document.getElementById("clearUserPoints");var pointList=document.getElementById("pointList");var pointXYInputList=document.querySelectorAll("input.x, input.y");var weight=document.getElementById("weight");var setWeight=document.getElementById("setWeight");var userPoints=new PointList_1.PointList("#EE1111");var generatedPoints=new PointList_1.PointList("#333");setWeight.addEventListener("click",function(e){var w=Number(weight.value);if(Point_1.Point.isValidWeight(w)){userPoints.setAllPointsWeight(w);var weightInputs=document.getElementsByClassName("w");var weightInputsLength=weightInputs.length;for(var i=0;i<weightInputsLength;i++)weightInputs[i].value=String(w)}else alert("Point not set, point must be greater than 0 and less than or equal to 1")});Canvas_1.Canvas.el.addEventListener("click",function(e){var mousePoint=getMousePoint(e);userPoints.addPoint(mousePoint);var userPointEl=mousePoint.getEl(userPoints.color,redraw);pointList.appendChild(userPointEl)},false);clearGenPoints.addEventListener("click",function(e){Canvas_1.Canvas.clear();generatedPoints.clearPointList();userPoints.reDraw()});clearUserPoints.addEventListener("click",function(e){Canvas_1.Canvas.clear();userPoints.clearPointList();generatedPoints.reDraw();pointList.innerHTML=""});genPointsBtn.addEventListener("click",function(e){if(userPoints.pList.length>=2){var p1=userPoints.pList[0];var p2=userPoints.pList[1];var pointCount=Number(genPointsCount.value);for(var i=0;i<=pointCount;i++){p2=Point_1.Point.pointBetweenPoints(p1,p2);generatedPoints.addPoint(p2);p1=userPoints.getRandomPoint()}}else alert("2 or more points are required to generate the points")});function getMousePoint(e){var rect=Canvas_1.Canvas.el.getBoundingClientRect();return new Point_1.Point(e.clientX-rect.left,e.clientY-rect.top)}function redraw(){Canvas_1.Canvas.clear();userPoints.reDraw();generatedPoints.reDraw()}},{"./Canvas":1,"./Point":2,"./PointList":3}]},{},[4]);
